{"version":3,"sources":["list.js"],"names":["createList","value","createNode","appendList","list","node","x","next","data","removeFromList","p","traveList","fn","node1","node2","console","log"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACxB,SAAOC,UAAU,CAACD,KAAD,CAAjB;AACH,CAFD;;AAIA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAMH,KAAN,EAAe;AAC9B,MAAMI,IAAI,GAAIH,UAAU,CAACD,KAAD,CAAxB;AACA,MAAIK,CAAC,GAAGF,IAAR;;AACA,SAAME,CAAC,CAACC,IAAR,EACA;AACID,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAN;AACH;;AACDD,EAAAA,CAAC,CAACC,IAAF,GAASF,IAAT;AACA,SAAOA,IAAP;AACH,CATD;;AAWA,IAAMH,UAAU,GAAG,SAAbA,UAAa,CAAAD,KAAK,EACxB;AACI,SAAM;AACFO,IAAAA,IAAI,EAACP,KADH;AAEFM,IAAAA,IAAI,EAAC;AAFH,GAAN;AAIH,CAND;;AAQA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACL,IAAD,EAAMC,IAAN,EAAc;AACjC,MAAIC,CAAC,GAAEF,IAAP;AACA,MAAIM,CAAC,GAAE,IAAP;;AACA,SAAMJ,CAAC,KAAKD,IAAZ,EAAiB;AAEjBK,IAAAA,CAAC,GAAGJ,CAAJ;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAN;AACC;;AAEJG,EAAAA,CAAC,CAACH,IAAF,GAAQD,CAAC,CAACC,IAAV;AACA,CAVD;;AAYA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACP,IAAD,EAAMQ,EAAN,EAAW;AACzB,MAAIN,CAAC,GAAEF,IAAP;;AACA,SAAME,CAAC,KAAK,IAAZ,EACA;AACIM,IAAAA,EAAE,CAACN,CAAD,CAAF;AACAA,IAAAA,CAAC,GAAEA,CAAC,CAACC,IAAL;AACH;AACJ,CAPD;;AASA,IAAMH,IAAI,GAAGJ,UAAU,CAAC,EAAD,CAAvB;AACA,IAAMa,KAAK,GAAGV,UAAU,CAACC,IAAD,EAAM,EAAN,CAAxB;AACA,IAAMU,KAAK,GAAGX,UAAU,CAACC,IAAD,EAAM,EAAN,CAAxB;AACAW,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAO,SAAS,CAACP,IAAD,EAAM,UAAAC,IAAI,EAAI;AAACU,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACG,IAAjB;AAAuB,CAAtC,CAAT","file":"list.77ef9d65.js","sourceRoot":"..\\src","sourcesContent":["const createList = value => {\r\n    return createNode(value);\r\n};\r\n\r\nconst appendList = (list,value) =>{\r\n    const node =  createNode(value)\r\n    let x = list;\r\n    while(x.next)\r\n    {\r\n        x = x.next;\r\n    }\r\n    x.next = node \r\n    return node;\r\n};\r\n\r\nconst createNode = value=>\r\n{\r\n    return{\r\n        data:value,\r\n        next:null\r\n    }; \r\n};\r\n\r\nconst removeFromList = (list,node) =>{\r\n    let x =list;\r\n    let p =null;\r\n    while(x !== node){\r\n\r\n    p = x \r\n    x = x.next\r\n    }\r\n    \r\n p.next =x.next\r\n}\r\n\r\nconst traveList = (list,fn)=>{\r\n    let x =list\r\n    while(x !== null)\r\n    {\r\n        fn(x);\r\n        x= x.next\r\n    }\r\n}\r\n\r\nconst list = createList(10);\r\nconst node1 = appendList(list,20)\r\nconst node2 = appendList(list,30)\r\nconsole.log(list)\r\ntraveList(list,node => {console.log(node.data)})"]}